name: Docker Release

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: proyecto-codigo

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Generar versión automática
        id: version
        run: |
          VERSION=$(date +'%Y.%m.%d.%H%M')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Versión generada: ${VERSION}"

      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build y Push a Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

      - name: Crear tag en Git
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Crear Release en GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comentar en el commit
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 Nueva versión desplegada:\n- Docker Hub: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}\n- GitHub Release: v${{ env.VERSION }}`
            })